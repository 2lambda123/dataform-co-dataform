def _impl(ctx):
  if (ctx.attr.name != "node_modules"):
    fail("Target must be called node_modules")
  tree = ctx.actions.declare_directory(ctx.attr.name)
  folder_path = tree.path.replace("/node_modules", "")
  arguments = ["--cwd", folder_path, "add"]
  for d in ctx.attr.deps:
    for f in d.files.to_list():
      arguments.append("file:" + f.path)
  ctx.actions.run(
    inputs = [],
    outputs = [ tree ],
    arguments = arguments,
    progress_message = "Installing node modules into %s" % tree.path,
    executable = ctx.executable._tool,
  )

  return [ DefaultInfo(files = depset([ tree ])) ]

node_modules = rule(
  implementation = _impl,
  attrs = {
    "deps": attr.label_list(doc = "node package tars"),
    "_tool": attr.label(
      executable = True,
      cfg = "host",
      allow_files = True,
      default = Label("@nodejs//:yarn"),
    )
  }
)
