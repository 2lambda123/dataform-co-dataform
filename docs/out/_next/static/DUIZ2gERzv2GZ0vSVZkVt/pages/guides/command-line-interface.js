(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{250:function(e,a,n){__NEXT_REGISTER_PAGE("/guides/command-line-interface",function(){return e.exports=n(251),{page:e.exports.default}})},251:function(e,a,n){"use strict";n.r(a);var t=n(0),o=n.n(t),m=n(1),s=n(12);function r(e,a){if(null==e)return{};var n,t,o=function(e,a){if(null==e)return{};var n,t,o={},m=Object.keys(e);for(t=0;t<m.length;t++)n=m[t],a.indexOf(n)>=0||(o[n]=e[n]);return o}(e,a);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(t=0;t<m.length;t++)n=m[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}a.default=function(e){var a=e.components,n=r(e,["components"]);return o.a.createElement(m.MDXTag,{name:"wrapper",Layout:function(e){var a=e.children;return o.a.createElement(s.a,{title:"Command line interface"},a)},layoutProps:n,components:a},o.a.createElement(m.MDXTag,{name:"h2",components:a},"Installation"),o.a.createElement(m.MDXTag,{name:"p",components:a},"Dataform can be installed via Node:"),o.a.createElement(m.MDXTag,{name:"pre",components:a},o.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-bash",metaString:""}},"npm i -g @dataform/cli")),o.a.createElement(m.MDXTag,{name:"h2",components:a},"Create new project"),o.a.createElement(m.MDXTag,{name:"p",components:a},"To create a new project in the folder ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"new_project"),":"),o.a.createElement(m.MDXTag,{name:"pre",components:a},o.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-bash",metaString:""}},"dataform init new_project --warehouse bigquery")),o.a.createElement(m.MDXTag,{name:"p",components:a},"Currently supported warehouse types are ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"[bigquery, redshift, snowflake, postgres]")),o.a.createElement(m.MDXTag,{name:"h2",components:a},"Project structure"),o.a.createElement(m.MDXTag,{name:"p",components:a},"The default project structure is as follows:"),o.a.createElement(m.MDXTag,{name:"pre",components:a},o.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-bash",metaString:""}},"project-dir\n├── definitions\n├── includes\n├── package.json\n└── dataform.json")),o.a.createElement(m.MDXTag,{name:"h2",components:a},"Define a materialization"),o.a.createElement(m.MDXTag,{name:"p",components:a},"The ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"definitions/")," directory contains files that define ",o.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"/materializations"}},"materializations"),", ",o.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"/assertions"}},"assertions"),", and ",o.a.createElement(m.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"/operations"}},"operations"),"."),o.a.createElement(m.MDXTag,{name:"p",components:a},"To create a new materialization, create a new file such as ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"definitions/simplemodel.sql")," with the following contents:"),o.a.createElement(m.MDXTag,{name:"pre",components:a},o.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-sql",metaString:""}},o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"select")," ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-number"}},"1")," ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"as")," ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"test"))),o.a.createElement(m.MDXTag,{name:"h2",components:a},"Compile project"),o.a.createElement(m.MDXTag,{name:"p",components:a},"To check everything has worked, run the following command at the root of your project directory to get JSON dump of the compiled project:"),o.a.createElement(m.MDXTag,{name:"pre",components:a},o.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-bash",metaString:""}},"dataform compile")),o.a.createElement(m.MDXTag,{name:"p",components:a},"You should see output along the lines of:"),o.a.createElement(m.MDXTag,{name:"pre",components:a},o.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-json",metaString:""}},"{\n  ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},'"materializations"'),": [\n    {\n      ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},'"name"'),": ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"simplemodel"'),",\n      ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},'"type"'),": ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"view"'),",\n      ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},'"target"'),": {\n        ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},'"schema"'),": ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"dataform"'),",\n        ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},'"name"'),": ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"simplemodel"'),"\n      },\n      ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},'"query"'),": ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"select 1 as test\n"'),",\n      ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},'"parsedColumns"'),": [\n        ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"test"'),"\n      ],\n      ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},'"fileName"'),": ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"definitions/simplemodel.sql"'),"\n    }\n  ]\n}")),o.a.createElement(m.MDXTag,{name:"h2",components:a},"Dry run"),o.a.createElement(m.MDXTag,{name:"p",components:a},"We can take this a step further and see exactly what statements and graph will be run, by executing the following:"),o.a.createElement(m.MDXTag,{name:"pre",components:a},o.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-bash",metaString:""}},"dataform build")),o.a.createElement(m.MDXTag,{name:"p",components:a},"You should see something similar to the following:"),o.a.createElement(m.MDXTag,{name:"pre",components:a},o.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-json",metaString:""}},"{\n  ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},'"nodes"'),": [\n    {\n      ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},'"name"'),": ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"simplemodel"'),",\n      ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},'"tasks"'),": [\n        {\n          ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},'"statement"'),": ",o.a.createElement(m.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},'"create or replace view `dataform.simplemodel`\n           as select * from (select 1 as test)"'),"\n        }\n      ]\n    }\n  ]\n}")),o.a.createElement(m.MDXTag,{name:"h2",components:a},"Create a profile"),o.a.createElement(m.MDXTag,{name:"p",components:a},"A profile defines the connection parameters to your warehouse."),o.a.createElement(m.MDXTag,{name:"p",components:a},"TODO"),o.a.createElement(m.MDXTag,{name:"h2",components:a},"Run project"),o.a.createElement(m.MDXTag,{name:"p",components:a},"If you are happy with the statements that will be executed, you can execute them against your data warehouse, by providing the path to your ",o.a.createElement(m.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"profile.json")," file created in the previous step."),o.a.createElement(m.MDXTag,{name:"pre",components:a},o.a.createElement(m.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-bash",metaString:""}},"dataform run --profile=<path-to-profile.json>")))}}},[[250,1,0]]]);